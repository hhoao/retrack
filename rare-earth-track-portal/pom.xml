<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>rare-earth-track</artifactId>
        <groupId>org.demo</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>rare-earth-track-portal</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>rare-earth-track-portal</name>
    <description>portal for rare-earth-track</description>

    <dependencies>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.demo</groupId>
            <artifactId>rare-earth-track-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.demo</groupId>
            <artifactId>rare-earth-track-mgb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--       common也是SpringBoot工程，SpringBoot工程打包编译时，会生成两种jar包，
                            一种是普通的jar，另一种是可执行jar。默认情况下，这两种jar的名称相同，在
                            不做配置的情况下，普通的jar先生成，可执行jar后生成，造成可执行jar会覆盖
                            普通的jar。而projectA工程无法依赖common工程的可执行jar，所以编译失败：
                            程序包xxx不存在。-->
                <configuration>
                    <classifier>exec</classifier>
                </configuration>
            </plugin>
            <!-- docker 打包插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>